"""
Django settings for drfdocs project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e-@*+&4=(*p(9iffs(y_7cpyng%g-d1yc%c!5hkt$p6+rg#+d!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
  
    'rest_framework',
    'rest_framework.authtoken',
    'drf_spectacular',
    'django_filters',

    'quickstart', 
    'snippets', 
    'Apiguide', 
    'ImpTopics',
    'serializerTopix'
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'drfdocs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'drfdocs.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#####################################
#####################################


# REST_FRAMEWORK = {
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'rest_framework.authentication.SessionAuthentication',
    #     'rest_framework.authentication.BasicAuthentication',
    # ],
# }


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
        # 'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ], 
    # 'EXCEPTION_HANDLER': 'Apiguide.utils.custom_exception_handler.custom_exception_handler', 
    'DEFAULT_METADATA_CLASS': 'rest_framework.metadata.SimpleMetadata',
    # 'DEFAULT_METADATA_CLASS': 'Apiguide.utils.metadata.MinimalMetadata'
    # 'DEFAULT_CONTENT_NEGOTIATION_CLASS': 'myapp.negotiation.IgnoreClientContentNegotiation',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 5, 
    # 'DEFAULT_PAGINATION_CLASS': 'Apiguide.utils.pagination.CustomPageNumberPagination',
    # 'DEFAULT_PAGINATION_CLASS': 'Apiguide.utils.pagination.StandardResultsSetPagination',
    # 'DEFAULT_PAGINATION_CLASS': 'Apiguide.utils.pagination.ProductCursorPagination',
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    # 'PAGE_SIZE': 10,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',


    # versioning
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
    # 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.QueryParameterVersioning',
    # 'DEFAULT_VERSION': '3.0',
    # 'ALLOWED_VERSIONS': ['3.0', '4.0'],
    # 'ALLOWED_VERSIONS': ['v1', 'v2'],
    # 'VERSION_PARAM': 'v'
    # 'DEFAULT_VERSION': '1.0',  # Default version if none is provided
    # 'ALLOWED_VERSIONS': ['1.0', '2.0'],  # Allowed versions
    # 'VERSION_PARAM': 'v',  # Version query parameter (useful for URLParamVersioning)
    # 'DEFAULT_THROTTLE_CLASSES': [
    #     'rest_framework.throttling.AnonRateThrottle',
    #     'rest_framework.throttling.UserRateThrottle',
    #      'rest_framework.throttling.ScopedRateThrottle',
    # ],
    # 'DEFAULT_THROTTLE_RATES': {
    #     'anon': '20/day',     # 100 requests per day for anonymous users
    #     'user': '20/day',    # 1000 requests per day for authenticated users
    #     'burst': '5/min',
    #     'sustained': '20/day',
    # },
    # this is for custom throttle class
    # 'DEFAULT_THROTTLE_RATES': {
    #     'custom_user': '4/day',
    #     'custom_anon': '2/day',
    # }

    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.ScopedRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'posts': '5/day',
        'comments': '4/day',
        'likes': '3/day',
    }, 

    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],

      'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),

    # 'DEFAULT_RENDERER_CLASSES': [
    #     # 'rest_framework.renderers.JSONRenderer',
    #     # 'rest_framework.renderers.BrowsableAPIRenderer',
    # ]
    
    # this is required to put and post hyerlink field
    'DEFAULT_VERSIONING_CLASS': None  # or just leave it unset
}


# settings.py
from rest_framework.reverse import reverse_lazy

LOGIN_REDIRECT_URL = reverse_lazy('home')


# ##############################################
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django.request': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }
 
# MIDDLEWARE += ['Apiguide.utils.middleware.ResponseDebugMiddleware']

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}



# Where to redirect users after login
LOGIN_REDIRECT_URL = '/'  # or '/home/' or any view you want

# Where to redirect if login is required and user is not logged in
LOGIN_URL = '/api/accounts/login/'

# Optional but good practice
LOGOUT_REDIRECT_URL = '/accounts/login/'

AUTHENTICATION_BACKENDS = [
    'serializerTopix.auth_backends.EmailBackend',  # replace 'yourapp' with your actual app name
    'django.contrib.auth.backends.ModelBackend',  # keep default to allow admin login
]